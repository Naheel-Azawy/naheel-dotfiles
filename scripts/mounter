#!/bin/python3

# requires ifuse and simple-mtpfs

import sh
import os
import json

HOME = os.getenv("HOME")

mtp_mnt = f"{HOME}/MTP Drives"
iot_mnt = f"{HOME}/iOS Drives"

def ls_parts():
    blocks = sh.lsblk("--json", "-po", "name,type,size,label,mountpoint")
    blocks = json.loads(str(blocks))["blockdevices"]
    parts = []
    for block in blocks:
        if "children" not in block:
            continue
        for part in block["children"]:
            if part["mountpoint"] in ["/", "/boot", "/home", "[SWAP]"]:
                continue
            if part["type"] in ["part", "lvm"]:
                parts.append(part)
    return parts

def ls_mtp():
    try:
        devices = sh.simple_mtpfs("-l")
    except sh.ErrorReturnCode_1:
        return []
    devices = devices.strip().split("\n")
    res = []
    for dev in devices:
        mp = f"{mtp_mnt}/{dev}"
        if not os.path.isdir(mp):
            mp = None
        res.append({
            "name": dev,
            "type": "mtp",
            "size": None,
            "label": None,
            "mountpoint": mp
        })
    return res

def ls_ios():
    try:
        # for now, only check if a device is connected
        sh.ifuse("--list-apps")
        name = "iOS device"
        mp = f"{iot_mnt}/{device}"
        if not os.path.isdir(mp):
            mp = None
        return [{
            "name": name,
            "type": "ios",
            "size": None,
            "label": None,
            "mountpoint": mp
        }]
    except sh.ErrorReturnCode_1:
        return []

def ls_all():
    return ls_ios() + ls_mtp() + ls_parts()

def stringify(drives):
    res = []
    for d in drives:
        line = "Mount " if d["mountpoint"] is None else "Unmount "
        line += d["name"]
        if d["label"] is not None:
            line += " " + d["label"]
        if d["mountpoint"] is not None:
            line += " from " + d["mountpoint"]
        if d["size"] is not None:
            line += f" ({d['size']})"
        res.append(line)
    res.sort()
    return "\n".join(res)

def mount(drive):
    pass

def umount(drive):
    pass

def main():
    print(stringify(ls_all()))

main()

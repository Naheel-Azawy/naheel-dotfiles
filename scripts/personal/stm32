#!/bin/sh

jail="$HOME/.local/share/jail-stm32"

dir_ide='STMicroelectronics/STM32Cube/STM32CubeIDE'
dir_prg='STMicroelectronics/STM32Cube/STM32CubeProgrammer'

SELF=$(realpath "$0")
SELF_NAME=$(basename "$SELF")

msg1() {
    printf '\033[1m\033[34m>>>\033[0m %s\n' "$*"
}

msg2() {
    printf '\033[1m\033[31m>>>\033[0m %s\n' "$*"
}

build_in_jail() {
    msg2 'Building IDE in jail'
    tmp="$HOME/tmp"

    msg2 'Preparing STM32CubeIDE'
    mkdir -p "${tmp}/build/stlink-server"
    sh "${tmp}/st-stm32cubeide_"*.sh \
       --quiet --noexec --nox11 --target "${tmp}/build"
    sh "${tmp}/build/"st-stlink-server.*.install.sh \
       --quiet --noexec --nox11 --target "${tmp}/build/stlink-server"

    msg2 'Installing STM32CubeIDE'
    install -d -m755 "$HOME/$dir_ide"
    tar zxf "${tmp}/build/st-stm32cubeide_"*.tar.gz -C "$HOME/$dir_ide"

    msg2 'Installing stlink server'
    cp "${tmp}/build/stlink-server/stlink-server" "$HOME/$dir_ide/"
    chmod 0755 "$HOME/$dir_ide/stlink-server"

    msg2 'Replace GDB by system'
    rm "$HOME/$dir_ide/plugins/"com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32*/tools/bin/arm-none-eabi-gdb
    rm "$HOME/$dir_ide/plugins/"com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32*/tools/bin/arm-none-eabi-gdb-add-index
    ln -s /usr/bin/arm-none-eabi-gdb "$HOME/$dir_ide/plugins/"com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32*/tools/bin
    ln -s /usr/bin/arm-none-eabi-gdb-add-index "$HOME/$dir_ide/plugins/"com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32*/tools/bin

    msg2 'Building in jail completed'
}

mk_desktops() {
    msg1 'Installing desktop shortcuts and icons'

    mkdir -p "${HOME}/.local/share/pixmaps"
    convert "$jail/$dir_ide/icon.xpm"            "${HOME}/.local/share/pixmaps/stm32cubeide.png"
    convert "$jail/$dir_prg/util/Programmer.ico" "${HOME}/.local/share/pixmaps/stm32cubeprog.png"
    mv "${HOME}/.local/share/pixmaps/stm32cubeprog-0.png" "${HOME}/.local/share/pixmaps/stm32cubeprog.png"
    rm "${HOME}/.local/share/pixmaps/stm32cubeprog-"*

    {
        echo '[Desktop Entry]'
        echo 'Name=STM32CubeIDE'
        echo "Exec=sh $SELF ide %F"
        echo "Icon=${HOME}/.local/share/pixmaps/stm32cubeide.png"
        echo 'Terminal=false'
        echo 'StartupNotify=true'
        echo 'Type=Application'
        echo 'Categories=Development'
    } > "${HOME}/.local/share/applications/stm32cubeide.desktop"

    {
        echo '[Desktop Entry]'
        echo 'Name=STM32CubeProgrammer'
        echo "Exec=sh $SELF prog %F"
        echo "Icon=${HOME}/.local/share/pixmaps/stm32cubeprog.png"
        echo 'Terminal=false'
        echo 'StartupNotify=true'
        echo 'Type=Application'
        echo 'Categories=Development'
    } > "${HOME}/.local/share/applications/stm32cubeprog.desktop"
}

jail_net() {
    firejail              \
        --noprofile       \
        --private-tmp     \
        --blacklist=/mnt  \
        --private="$jail" \
        "$@"
}

jail() {
    jail_net --net=none "$@"
}

jail_run() {
    if [ ! -d "$jail" ]; then
        echo 'Call with install <IDE_ZIP> <PROG_ZIP> first'
        return
    fi
    jail_net "$@"
}

install_ide() {
    zip_ide=$(realpath "$1")
    msg1 'Installing STM32CubeIDE'
    (rm -rf "$jail/tmp"       &&
         mkdir -p "$jail/tmp" &&
         cd "$jail/tmp"       &&
         unzip "$zip_ide") || return 2
    cp "$SELF" "$jail/tmp" || return 3
    jail sh "$HOME/tmp/$SELF_NAME" build-in-jail
}

install_prg() {
    zip_prg=$(realpath "$1")
    msg1 'Installing STM32CubeProgrammer'
    msg1 'NOTE: keep the default installation path'
    (rm -rf "$jail/tmp"       &&
         mkdir -p "$jail/tmp" &&
         cd "$jail/tmp"       &&
         unzip "$zip_prg") || return 2
    msg2 'Running installer in jail'
    jail "$HOME/tmp/SetupSTM32CubeProgrammer-2.12.0.linux"
}

install_all() {
    zip_ide="$1"
    zip_prg="$2"
    [ $# -lt 2 ] && {
        echo 'Pass the IDE and programmer installation zips'
        return 1
    }

    install_prg "$zip_prg"
    install_ide "$zip_ide"

    mk_desktops
    rm -rf "$jail/tmp"
    msg1 'Installation done!'
}

main() {
    case "$1" in
        prog)          jail_run "$HOME/$dir_prg/bin/STM32CubeProgrammer" ;;
        ide)           jail_run "$HOME/$dir_ide/stm32cubeide" ;;
        stlink) shift; jail_run "$HOME/$dir_ide/stlink-server" "$@" ;;

        install)       shift; install_all "$@" ;;
        build-in-jail)        build_in_jail ;;
        *) return 1 ;;
    esac
}

main "$@"

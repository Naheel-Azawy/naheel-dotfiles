#!/bin/sh

awesomefontecho() {
    printf '<span font="Font Awesome 5 Free" rise="-1024"'
    [ "$2" ] && printf ' color="%s"' "$2"
    printf '>%s</span>' "$1"
}

clock() {
    [ "$BLOCK_BUTTON" = "1" ] &&
        theterm -a '-c floatme -g 70x35' 'cal -y && read -p ""'
    D=$(date '+%a %Y-%m-%d %I:%M:%S %p')
    printf '%s' "$D"
}

batt() {
    V=$(cat /sys/class/power_supply/BAT1/capacity 2>/dev/null)
    C=$(cat /sys/class/power_supply/BAT1/status   2>/dev/null)

    if [ ! "$V" ] || [ ! "$C" ]; then
        B=$(acpi -b)
        V=$(echo "$B" | awk -F'[,:%]' '{print $3}')
        C=$(echo "$B" | awk -F'[, ]'  '{print $3}')
    fi

    R=''

    if [ "$1" = "-a" ]; then
        if [ "$C" != 'Discharging' ]; then
            printf '~'
        fi
        printf "%d%%" "$V"
        return
    fi

    if [ "$C" != 'Discharging' ]; then
        if [ "$V" -ge 99 ]; then
            R='#00FF00'
        else
            R='#FFD700'
        fi
        awesomefontecho '' $R
        printf ' '
    elif [ "$V" -le "5" ]; then
        R='#FF0000'
        awesomefontecho '' $R
        printf ' '
    elif [ "$V" -le "20" ]; then
        R='#FF0000'
    fi

    if [ "$V" -lt "50" ]; then
        awesomefontecho '' $R
    elif [ "$V" -lt "60" ]; then
        awesomefontecho '' $R
    elif [ "$V" -lt "90" ]; then
        awesomefontecho '' $R
    else
        awesomefontecho '' $R
    fi

    printf " %d%%" "$V"

    battery-check "$V" "$C" &
}

wifi() {
    [ "$BLOCK_BUTTON" = "1" ] && networkmanager_dmenu
    V=$(awk 'NR==3 {print $3}' /proc/net/wireless)
    [ "$V" != '' ] && {
        [ "$1" != "-a" ] && \
            awesomefontecho '' && printf ' '
        printf '%.0f%%' "$V"
    }
}

brig() {
    [ "$BLOCK_BUTTON" = "1" ] && dmenudisplay
    [ "$1" != "-a" ] && awesomefontecho '' && printf ' '
    printf '%s%%' "$(brightness -print)"
}

volu() {
    case "$BLOCK_BUTTON" in
	      1) theterm pulsemixer ;;
	      3) pamixer -t         ;;
	      4) pamixer -i 5       ;;
	      5) pamixer -d 5       ;;
    esac
    V=$(pamixer --get-volume)
    if [ "$1" != "-a" ]; then
        if [ "$(pamixer --get-mute)" = "true" ] || [ "$V" = 0 ]; then
            awesomefontecho ''
            printf '<span font="3"> </span>'
            awesomefontecho ''
        else
            awesomefontecho ''
        fi
        printf ' '
    fi
    printf "%d%%" "$V"
}

sens() {
    [ "$BLOCK_BUTTON" = "1" ] &&
        theterm -a '-c floatme -g 65x19' 'watch -tn 1 sensors'
    O=$(sensors coretemp-isa-0000 -j | jq '.["coretemp-isa-0000"]["Package id 0"]')
    T=$(echo "$O" | jq '.["temp1_input"]')
    M=$(echo "$O" | jq '.["temp1_max"]')
    if [ "$1" != "-a" ]; then
        P=$(echo "$T/$M*100" | bc -l)
        P=$(printf '%.0f' "$P")
        if [ "$P" -ge "90" ]; then
            awesomefontecho '' '#FF0000'
            printf ' '
            awesomefontecho '' '#FF0000'
        elif [ "$P" -gt "50" ]; then
            awesomefontecho ''
        elif [ "$P" -gt "40" ]; then
            awesomefontecho ''
        else
            awesomefontecho ''
        fi
        printf ' '
    fi
    printf '%s°C' "$T"
}

weat() {
    [ "$BLOCK_BUTTON" = "1" ] &&
        theterm -a '-c floatme -g 63x38' \
                'weather-update & head -n 37 ~/.weatherreport && read -p ""'
    #   Lines from 3rd to 4th                         Remove color codes                Cut
    V=$(sed -n -e "3,4 p" -e "4 q" ~/.weatherreport | sed "s/\x1B\[[0-9;]*[JKmsu]//g" | cut -c 16-)
    #S=$(echo "$V" | head -1 | awk '{print tolower($0)}')
    W=$(echo "$V" | tail -1 | awk -F'[- ]' '{print $1}')
    [ "$1" != "-a" ] && awesomefontecho '' && printf ' '
    printf '%s°C' "$W"
}

pray() {
    [ "$BLOCK_BUTTON" = "1" ] &&
        theterm -a '-c floatme -g 25x8' 'p && read -p ""'
    [ "$1" != "-a" ] && awesomefontecho '' && printf ' '
    printf '%s' "$(p n)"
}

lang() {
    arg='-v'
    [ "$BLOCK_BUTTON" = "1" ] && arg=''
    printf '%s' "$(lang-toggle $arg)"
}

host() {
    printf '%s' "$(hostname)"
}

cmus() {
    Q=$(cmus-remote -Q 2>/dev/null)
    [ ! "$Q" ] && return
    T=$(echo "$Q" | sed -rn 's/tag title (.+)/\1/p')
    A=$(echo "$Q" | sed -rn 's/tag artist (.+)/\1/p')
    S=$(echo "$Q" | sed -rn 's/status (.+)/\1/p')
    [ "$1" != "-a" ] && {
        [ "$S" = 'playing' ] && awesomefontecho ''
        [ "$S" = 'paused' ]  && awesomefontecho ''
        printf ' '
    }
    printf '%s - %s' "$T" "$A"
}

donno() {
    [ "$BLOCK_BUTTON" = "1" ] && theterm 'lolcowforune -p' &
    echo '¯\_(ツ)_/¯'
}

close() {
    [ "$BLOCK_BUTTON" = "1" ] && i3-msg kill >/dev/null
    awesomefontecho ''
}

if [ "$1" = '-a' ]; then
    a='-a'
    sep=" | "
    shift
else
    sep="  "
fi

MAP='
D donno
L lang
P pray
W weat
T sens
V volu
S wifi
B batt
C clock
'

MAP_CMDS=$(echo "$MAP" | sed -En "s/. (.+)/\1/p" | tr '\n' ' ')

lines() {
    for c in $MAP_CMDS; do
        printf '%s:%s\n' \
               "$(echo "$MAP" | sed -En "s/(.) $c/\1/p")" \
               "$(eval "$c" -a)"
    done
}

line() {
    for c in $MAP_CMDS; do
        printf '%s:%s ' \
               "$(echo "$MAP" | sed -En "s/(.) $c/\1/p")" \
               "$(eval "$c" -a)"
    done
}

gui() {
    L=$(lines | menu-interface -i | awk -F':' '{print $1}')
    [ "$L" ] && {
        C=$(echo "$MAP" | sed -En "s/$L (.+)/\1/p")
        dmenufixfocus -l 2>/dev/null &
        BLOCK_BUTTON=1 "$C" >/dev/null
    }
}

count=0
end=$(($# - 1))
for arg in "$@"; do
    eval "$arg" $a
    [ $count -lt $end ] && printf '%s' "$sep"
    count=$((count+1))
done
echo

#!/bin/sh

run_c() {
    execute c "
double ans = (double) $*;
if (((int) ans) == ans)
    printf(\"%d\\n\", (int) ans);
else
    printf(\"%f\\n\", ans);
"
}

run_cx() {
    execute c "printf(\"%x\\n\", $*);"
}

run_bc() {
    [ $# = 0 ] && (bc -q; exit)
    echo "$@" | bc -l
}

run_py() {
    PYH='
from math import *
import numpy as np
import matplotlib.pyplot as plt
plt.style.use("dark_background")
def frange(x, y, jump):
    res = []
    while x < y:
        res.append(x)
        x += jump
    return res
def plot(*args, **kwargs):
    plt.plot(*args, **kwargs)
    plt.show()
'
    [ $# = 0 ] && (ipython --no-banner -i -c "$PYH"; exit)
    F=$(mktemp)
    echo "$PYH
print($*)" > "$F"
    python "$F"
    rm -f "$F"
}

run_oct() {
    OH='
pkg load communications signal control;
PS1(">> ");
'
    OCTAVE="octave-cli -q --persist --eval '$OH'"
    [ $# = 0 ] && (eval "$OCTAVE"; exit)
    echo "$@" | eval "$OCTAVE" | sed 's/ans =\s*//g'
}

case "$1" in
    -c)     shift; run_c   "$@";;
    -cx|-x) shift; run_cx  "$@";;
    -bc|-q) shift; run_bc  "$@";;
    -py)    shift; run_py  "$@";;
    -oct)   shift; run_oct "$@";;
    *)             run_oct "$@";;
esac

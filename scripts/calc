#!/bin/sh
Q=0 # Q for Quick
if [ "$1" = "-c" ]; then # calculate with the C compiler
    shift
    execute c "printf(\"%d\\n\", $@);"
    exit
elif [ "$1" = '-q' ]; then
    Q=1
    shift
fi

if [ "$Q" = '0' ] && [ -e /usr/bin/ipython ]; then
    PYH='
from math import *
import numpy as np
import matplotlib.pyplot as plt
plt.style.use("dark_background")
def frange(x, y, jump):
    res = []
    while x < y:
        res.append(x)
        x += jump
    return res
def plot(*args, **kwargs):
    plt.plot(*args, **kwargs)
    plt.show()
'
    [ $# = 0 ] && (ipython --no-banner -i -c "$PYH"; exit)
    F=$(mktemp)
    echo "$PYH
print($@)" > "$F"
    python "$F"
    rm -f "$F"
elif [ "$Q" = '0' ] && [ -e /usr/bin/octave-cli ]; then
    [ $# = 0 ] && (octave-cli -q; exit)
    echo "$@" | octave-cli -q | sed 's/ans =\s*//g'
else
    [ $# = 0 ] && (bc -q; exit)
    echo "$@" | bc -l
fi

#!/bin/sh

BLUE='\033[1;34m'
RED='\033[1;31m'
YELLOW='\033[1;33m'
GREEN='\033[1;32m'
RESET='\033[0m'

compiler=pdflatex

run_showing() {
    printf "$GREEN\$$RESET %s\n" "$*" >&2
    "$@"
}

gen_pdf() {
    run_showing $compiler -interaction=nonstopmode \
                -synctex=1 --halt-on-error "$@"
}

gen_bib() {
    run_showing biber "$@"
}

embed_fonts() {
    run_showing gs -q -dNOPAUSE -dBATCH -dPDFSETTINGS=/prepress -sDEVICE=pdfwrite -sOutputFile="$1.embedded.pdf" "$1"
    run_showing mv "$1.embedded.pdf" "$1"
}

garbage() {
    [ "$1" = '--all' ] && {
        shift
        N=$(basename "$1")
        echo "./.$N.build"
        echo "$1.synctex.gz"
        echo "$1.pdf"
    }
    echo "$1.aux"
    echo "$1.bbl"
    echo "$1.bcf"
    echo "$1.blg"
    echo "$1.log"
    echo "$1.out"
    echo "$1.run.xml"
    echo "$1.aux"
    echo "$1.lof"
    echo "$1.lot"
    echo "$1.toc"
    echo "$1.nav"
    echo "$1.snm"
    echo "$1.vrb"
    echo "./texput.log"
}

garbage_hide() {
    F="$1"
    D=$(dirname "$F")
    N=$(basename "$F")
    cd "$D" || return 1
    mkdir -p ".$N.build"
    G=$(garbage "$N")
    echo "$G" |
        xargs -I {} mv {} ".$N.build/" 2>/dev/null
}

garbage_show() {
    F="$1"
    D=$(dirname "$F")
    N=$(basename "$F")
    cd "$D" || return 1
    mv ".$N.build/"* . 2>/dev/null
}

cleanup() {
    G=$(garbage --all "$1")
    printf "$RED>>> DELETING:$RESET\n"
    echo "$G"
    echo "$G" | xargs rm -rf
}

rerun_needed() {
    echo "$1" | grep -iq 'Warning: .*rerun ' ||
        echo "$1" | grep -iq 'Warning: .*(re)run ' ||
        echo "$1" | grep -iq 'Warning: .*again '
}

bibtex_needed() {
    echo "$1" | grep -iq 'Please (re)run Biber on the file' ||
        echo "$1" | grep -iq 'Please (re)run BibTeX on the file'
}

main() {
    ascii=; [ "$1" = '-a' ] && ascii=1 && shift
    [ -t 1 ] && [ -t 0 ] || ascii=1

    [ "$1" = '--compiler' ] && {
        compiler="$2"
        shift 2
    }

    clean=
    [ "$1" = 'clean' ] && clean=1 && shift

    if [ "$ascii" ]; then
        BLUE=
        RED=
        YELLOW=
        GREEN=
        RESET=
    fi

    F="$1"

    [ -n "$F" ] || {
        F=$(find . -maxdepth 1 -name '*.tex' | head -n1)
    }

    [ -f "$F" ] || {
        printf "$RED>>> ERROR:$RESET '%s' is not a file\n" "$F"
        return 1
    }

    F="${F%.*}"

    if [ "$clean" ]; then
        cleanup "$F"
        return
    fi

    garbage_show "$F"

    # first latex run
    if OUT=$(gen_pdf "$F.tex"); then

        # run bib if needed
        if rerun_needed "$OUT"; then
            if BIBOUT=$(gen_bib "$F") &&
                    ! echo "$BIBOUT" | grep -q 'does not contain any citations!'
            then
                # another latex is always needed after biber
                OUT=$(gen_pdf "$F.tex")

                # sometimes, the files get messy and a clean build is needed
                if bibtex_needed "$OUT"; then
                    cleanup "$F"
                    BIBOUT=$(gen_bib "$F") &&
                        OUT=$(gen_pdf "$F.tex")
                fi
            fi
        fi

        # another latex run if needed
        if rerun_needed "$OUT"; then
            OUT=$(gen_pdf "$F.tex")
        fi

        embed_fonts "$F.pdf"
    fi

    ERRS=$(echo "$OUT" |
               grep -A 1 -E '^\! .+')
    WRNS=$(echo "$OUT" |
               grep -A 1 -E 'Warning:' |
               grep -E '^[A-Za-z\(]')

    if [ "$BIBOUT" ]; then
        printf "$BLUE>>> BIBLIOGRAPHY (%s):$RESET\n" "$BIB"
        echo "$BIBOUT"
    fi
    if [ "$ERRS" ]; then
        printf "$RED>>> ERRORS:$RESET\n"
        echo "$ERRS"
    fi
    if [ "$WRNS" ]; then
        printf "$YELLOW>>> WARNINGS:$RESET\n"
        echo "$WRNS"
    fi

    garbage_hide "$F"

    if [ "$ERRS" ]; then
        return 1
    fi
}

main "$@"

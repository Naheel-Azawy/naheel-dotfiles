#!/bin/sh

i3_resize() {
    case "$1" in
        left)  i3-msg resize shrink width  "$2" px or "$2" ppt ;;
        right) i3-msg resize grow   width  "$2" px or "$2" ppt ;;
        up)    i3-msg resize shrink height "$2" px or "$2" ppt ;;
        down)  i3-msg resize grow   height "$2" px or "$2" ppt ;;
    esac
}

bspwm_resize() {
    case "$1" in
        left)  bspc node -z left  "$2"   0  || bspc node -z right -"$2"  0  ;;
        right) bspc node -z right "$2"   0  || bspc node -z left  -"$2"  0  ;;
        up)    bspc node -z top     0 -"$2" || bspc node -z bottom   0 "$2" ;;
        down)  bspc node -z bottom  0 -"$2" || bspc node -z top      0 "$2" ;;
    esac
}

dir_bspwm() {
    case "$1" in
        left)  echo west  ;;
        right) echo east  ;;
        up)    echo north ;;
        down)  echo south ;;
    esac
}

bspwm_move() {
    case "$1" in
        left)  bspc node -v -20   0 || bspc node -s west  ;;
        right) bspc node -v  20   0 || bspc node -s east  ;;
        up)    bspc node -v   0 -20 || bspc node -s north ;;
        down)  bspc node -v   0  20 || bspc node -s south ;;
    esac
}

bspwm_ws_check() {
    # dynamic, i3-like behavior
    # remove empty desktops
    bspc query -D -d .!occupied --names |
        xargs -d '\n' -I {} bspc desktop {} -r
    # remove empty monitors
    bspc query -M -m .!occupied --names |
        xargs -d '\n' -I {} bspc monitor {} -r
    # create if not there
    bspc query -D -d "$1" >/dev/null ||
        bspc monitor -a "$1"
}

if xdotool getactivewindow getwindowname | grep -q emacs; then
    case "$1" in
        window_focus) emacsclient --no-wait --eval "(windmove-$2)" && exit ;;
        window_close) emacsclient --no-wait --eval "(delete-window)" && exit ;;
    esac
fi

case "$WINDOW_MANAGER" in
    i3)
        case "$1" in
            fullscreen) i3-msg fullscreen toggle ;;
            float) i3-msg floating toggle ;;
            stick) i3-msg sticky toggle ;;
            split) i3-msg split t ;;
            float_focus) i3-msg focus mode_toggle ;;
            container_focus_parent) i3-msg focus parent ;;
            container_focus_child) i3-msg focus child ;;
            window_close) i3-msg kill ;;
            window_focus) i3-msg focus "$2" ;;
            window_move) i3-msg move "$2" ;;
            window_resize) i3_resize "$2" 10 ;;
            window_resize_tiny) i3_resize "$2" 1 ;;
            workspace) i3-msg workspace "$2" ;;
            workspace_move) i3-msg move container to workspace "$2" ;;
            workspace_move_go) i3-msg move container to workspace "$2"\; workspace "$2" ;;
            workspace_next) i3-msg workspace next ;;
            workspace_prev) i3-msg workspace prev ;;
            workspace_monitor_next) i3-msg move workspace to output right ;;
            restart) i3-msg restart ;;
            end) i3-msg exit ;;
        esac ;;

    bspwm)
        case "$1" in
            fullscreen) bspc node -t ~fullscreen ;;
            float) bspc node -t ~floating ;;
            stick) bspc node -s sticky ;;
            split) : ;;
            float_focus) : ;;
            container_focus_parent) bspc node -f @parent ;;
            container_focus_child) bspc node -f @first ;;
            window_close) bspc node -c ;;
            window_focus) bspc node -f "$(dir_bspwm "$2")" ;;
            window_move) bspwm_move "$2" ;;
            window_resize) bspwm_resize "$2" 30 ;;
            window_resize_tiny) bspwm_resize "$2" 5 ;;
            workspace) bspwm_ws_check "$2" && bspc desktop -f "$2" ;;
            workspace_move) bspwm_ws_check "$2" && bspc node -d "$2" ;;
            workspace_move_go) bspwm_ws_check "$2" && bspc node -d "$2" && bspc desktop -f "$2" ;;
            workspace_next) bspc desktop -f next ;;
            workspace_prev) bspc desktop -f prev ;;
            workspace_monitor_next) bspc desktop -m next --follow ;;
            restart) bspc wm -r ;;
            end) bspc quit ;;
        esac ;;

    *)
        echo "Unknown window manager '$WINDOW_MANAGER'" ;;
esac

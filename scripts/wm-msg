#!/bin/sh

# send window manager messages using i3-msg or bspc
# emacs window movement included

i3_resize() {
    case "$1" in
        left)  i3-msg resize shrink width  "$2" px or "$2" ppt ;;
        right) i3-msg resize grow   width  "$2" px or "$2" ppt ;;
        up)    i3-msg resize shrink height "$2" px or "$2" ppt ;;
        down)  i3-msg resize grow   height "$2" px or "$2" ppt ;;
    esac
}

bspwm_resize() {
    case "$1" in
        left)  bspc node -z left  "$2"   0  || bspc node -z right -"$2"  0  ;;
        right) bspc node -z right "$2"   0  || bspc node -z left  -"$2"  0  ;;
        up)    bspc node -z top     0 -"$2" || bspc node -z bottom   0 "$2" ;;
        down)  bspc node -z bottom  0 -"$2" || bspc node -z top      0 "$2" ;;
    esac
}

dir_bspwm() {
    case "$1" in
        left)  echo west  ;;
        right) echo east  ;;
        up)    echo north ;;
        down)  echo south ;;
    esac
}

bspwm_move() {
    case "$1" in
        left)  bspc node -v -20   0 || bspc node -s west  ;;
        right) bspc node -v  20   0 || bspc node -s east  ;;
        up)    bspc node -v   0 -20 || bspc node -s north ;;
        down)  bspc node -v   0  20 || bspc node -s south ;;
    esac
}

bspwm_ws_check() {
    # dynamic, i3-like behavior
    target="$1"
    # create if not there
    bspc query -D -d "$target" 2>/dev/null ||
        bspc monitor -a "$target"
}

bspwm_ws_cleanup() {
    # remove empty desktops
    cur=$(bspc query -D -d .focused --names)
    bspc query -D -d .!occupied --names |
        grep -v "$cur" |
        xargs -d '\n' -I {} bspc desktop {} -r

    # remove empty monitors
    bspc query -M -m .!occupied --names |
        xargs -d '\n' -I {} bspc monitor {} -r

    # re-order desktops names
    # max=$({
    #          bspc query -D -d .occupied --names
    #          echo "$target"
    #      } | sort -n | tail -n1)
    # names=$(seq -s ' ' "$max")
    # eval "bspc monitor -d $names"
}

i3_ws_new() {
    workspaces=$(i3-msg -t get_workspaces | jq -r '.[].name')
    new=$(seq 10 | grep -v "$workspaces" | head -n1)
    i3-msg workspace "$new"
}

bspwm_ws_new() {
    max=$(bspc query -D -d .occupied --names |
              sort -n | tail -n1)
    new=$((max + 1))
    [ "$new" -le 10 ] && {
        bspwm_ws_check "$new"
        bspc desktop -f "$new"
        bspwm_ws_cleanup
    }
}

ws_scshot() {
    : # maim --hidecursor "$HOME/ws/$1.png"
}

if xdotool getactivewindow getwindowname | grep -q emacs; then
    case "$1" in
        window_focus) emacsclient --no-wait --eval "(windmove-$2)" && exit ;;
        window_close) emacsclient --no-wait --eval "(delete-window)" && exit ;;
    esac
fi

case "$WINDOW_MANAGER" in
    i3)
        case "$1" in
            fullscreen)             i3-msg fullscreen toggle ;;
            float)                  i3-msg floating toggle ;;
            stick)                  i3-msg sticky toggle ;;
            split)                  i3-msg split t ;;
            float_focus)            i3-msg focus mode_toggle ;;
            container_focus_parent) i3-msg focus parent ;;
            container_focus_child)  i3-msg focus child ;;
            window_close)           i3-msg kill ;;
            window_focus)           i3-msg focus "$2" ;;
            window_move)            i3-msg move "$2" ;;
            window_resize)          i3_resize "$2" 10 ;;
            window_resize_tiny)     i3_resize "$2" 1 ;;
            workspace)              ws_scshot "$2"; i3-msg workspace "$2" ;;
            workspace_move)         i3-msg move container to workspace "$2" ;;
            workspace_move_go)      ws_scshot "$2"; i3-msg move container to workspace "$2"\; workspace "$2" ;;
            workspace_next)         ws_scshot cur; i3-msg workspace next ;;
            workspace_prev)         ws_scshot cur; i3-msg workspace prev ;;
            workspace_new)          ws_scshot cur; i3_ws_new ;;
            workspace_monitor_next) i3-msg move workspace to output right ;;
            restart)                i3-msg restart ;;
            end)                    i3-msg exit ;;
        esac ;;

    bspwm)
        case "$1" in
            fullscreen)             bspc node -t ~fullscreen ;;
            float)                  bspc node -t ~floating ;;
            stick)                  bspc node -s sticky ;;
            split)                  : ;;
            float_focus)            : ;;
            container_focus_parent) bspc node -f @parent ;;
            container_focus_child)  bspc node -f @first ;;
            window_close)           bspc node -c ;;
            window_focus)           bspc node -f "$(dir_bspwm "$2")" ;;
            window_move)            bspwm_move "$2" ;;
            window_resize)          bspwm_resize "$2" 30 ;;
            window_resize_tiny)     bspwm_resize "$2" 5 ;;
            workspace)              ws_scshot "$2"; bspwm_ws_check "$2" && bspc desktop -f "$2"; bspwm_ws_cleanup ;;
            workspace_move)         bspwm_ws_check "$2" && bspc node -d "$2"; bspwm_ws_cleanup ;;
            workspace_move_go)      ws_scshot "$2"; bspwm_ws_check "$2" && bspc node -d "$2" && bspc desktop -f "$2"; bspwm_ws_cleanup ;;
            workspace_next)         ws_scshot cur; bspc desktop -f next ;;
            workspace_prev)         ws_scshot cur; bspc desktop -f prev ;;
            workspace_new)          ws_scshot cur; bspwm_ws_new ;;
            workspace_monitor_next) bspc desktop -m next --follow ;;
            restart)                bspc wm -r ;;
            end)                    bspc quit ;;
        esac ;;

    *)
        echo "Unknown window manager '$WINDOW_MANAGER'" ;;
esac

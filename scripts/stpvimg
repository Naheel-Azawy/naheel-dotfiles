#!/bin/bash

# Example usage:
# $ stpvimg --listen 0 &
# $ stpvimg --add 0 $HOME/1.png
# $ stpvimg --add 0 $HOME/2.png 0 10 20 20
# $ stpvimg --clear 0
# $ stpvimg --end 0

function printerr {
    BIN=$(basename "$0")
    >&2 echo "usage: $BIN [--listen id] [--add id picture [x y w h]] [--clear id] [--end id]"
    exit 1
}

# check the id
[[ "$2" == '' ]] && printerr

# the fifo
F="/tmp/stpvimgfifo$2"

# pid of this listener
FPID="$F-pid"

# add picture
[[ "$1" == '--add' ]] && [[ -f "$3" ]] && {
    X="$4"; Y="$5"; W="$6"; H="$7"
    [ ! "$X" ] || [ ! "$Y" ] || [ ! "$W" ] || [ ! "$H" ] && {
        COLS=$(($(tput cols) / 2))
        LINS=$(($(tput lines) - 2))
        X="$COLS"; Y="1"; W="$COLS"; H="$LINS"
    }
    echo "$X $Y $W $H $3" >> "$F"
    exit 0
}

# clear without exiting
[[ "$1" == '--clear' ]] && {
    echo '' >> "$F"
    exit 0
}

# exit
[[ "$1" == '--end' ]] && {
    echo '0 0 0 0 END' > "$F"
    { # in case for whatever reason the listenor does not die
        sleep .1
        pkill -TERM -P "$(cat "$FPID")"
        rm -f "$F" "$FPID"
    } 2>/dev/null &
    exit 0
}

# continue and create the listener
[[ "$1" == '--listen' ]] || printerr

# if already listening, ignore
[ -e "$F" ] && exit

mkfifo "$F"
echo $$ > "$FPID"

source "`ueberzug library`"

tail -f "$F" | {
    while true; do
        if read x y w h file; then
            [ "$file" = 'END' ] && exit
            ImageLayer::remove [identifier]="img0"
            #echo ">>> $x $y $w $h $file"
            [[ -f "$file" ]] && {
                ImageLayer::add [identifier]="img0" \
                                [path]="$file" \
                                [x]="$x" [y]="$y" \
                                [max_width]="$w" [max_height]="$h"
            }
        fi
    done
} | ImageLayer

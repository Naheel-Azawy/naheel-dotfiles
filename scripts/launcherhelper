#!/bin/python3
from pythonish import *
import json

CACHE = f"{HOME}/.cache/launcher_recent.json"
KEYS = f"{DOTFILES_DIR}/configs/sxhkdrc.gen.sh"

TUIAPPS = [
    "music-player",
    "cmus",
    "emx",
    "lf",
    "vis",
    "corona",
    "alsamixer",
    "lyrics"
]

GAMES = sh.games("list").strip().split("\n")

# TODO: commands from x window apps
COMMANDS = {
    "lf": "sed -En 's/^cmd ([a-zA-Z\-]+) .*/\1/p' ~/.config/lf/lfrc"
}

def istui(b):
    return b in TUIAPPS

def isgame(b):
    return b in GAMES

def getjson():
    try:
        return json.load(open(CACHE))
    except:
        return {}

def inc(recent, b):
    try:
        recent[b] += 1
    except:
        recent[b] = 1
    json.dump(recent, open(CACHE, 'w'))

cmd = argv[1] if len(argv) > 1 else None
arg = argv[2] if len(argv) > 2 else None

if cmd == "istui":
    exit(0 if istui(arg) else 1)

if cmd == "isgame":
    exit(0 if isgame(arg) else 1)

if cmd == "clear":
    os.remove(CACHE)
    exit()

recent = getjson()

if cmd == "inc":
    inc(recent, arg)
    exit()

if cmd == "run":
    str  = arg.split(":")
    type = str[0]
    if len(str) > 1:
        del str[0]
        run = ":".join(str)
    else:
        run = str[0]
        type = ""
    run  = run.strip()
    type = type.strip()

    if type == "power":
        sh.dmenupower(run)
    elif type == "shortcuts":
        run = run.split(":")[0].strip()
        msg = os.popen(f"{KEYS} -r {run}").read()
        os.system(msg)
    elif type == "bar":
        #os.system("bar gui") # TODO: handle
        pass
    elif type == "games":
        sh.games(run)
    else:
        exe = run.split()[0]
        if os.popen(f"command -v {exe}").close() != 256:
            inc(recent, exe)
            if istui(exe):
                sh.theterm(run)
            else:
                os.system(run)
    exit()

bins = os.popen("dmenu_path").read().split("\n")
bins.pop() # remove last empty line
bins += GAMES
bins = list(set(bins))

# in case any need to be deleted
todel = []

for b in recent.keys():
    try:
        bins.remove(b)
    except:
        todel.append(b)

# in case any need to be deleted
for b in todel:
    del recent[b]

recent = sorted(recent, key=recent.get, reverse=True)
allbins = recent + bins

def ident(i):
    return ("%9s: ") % i

if cmd == "games":
    for g in GAMES:
        print(g)
elif cmd == "recent":
    for b in recent:
        print(b)
elif cmd == "notused":
    for b in bins:
        print(b)
elif cmd == "all":
    for b in allbins:
        print(b)
else:
    items_count = 0
    def printout(s):
        print(s)
        #global items_count
        #items_count += 1
        #if items_count == 5:
        #    print(ident("bar") + sh.bar("-a").strip())
    
    for b in recent:
        printout(ident("games" if b in GAMES else "recent") + b)

    for p in [ "Suspend", "Shutdown", "Reboot", "Logout", "Lock", "Hibernate" ]:
        printout(ident("power") + p)

    shortcuts = os.popen(KEYS + " -d").read().split("\n")
    shortcuts.pop() # remove last empty line
    for s in shortcuts:
        printout(ident("shortcuts") + s)

    for b in bins:
        printout(ident("games" if b in GAMES else "bins") + b)

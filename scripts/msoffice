#!/bin/sh

SELF=$(realpath "$0")
DESKTOPS="$HOME/.local/share/applications"
JAIL_PREFIX="$HOME/.local/share/jail-office-"

year=
win_arch=
tricks=
win_version=
jail_path=

icons() {
    r= ; [ "$1" = --rm ] && r=1
    hi="$jail_path/.local/share/icons/hicolor"
    for p in WINWORD POWERPNT EXCEL; do
        ic=$(find "$hi/48x48/apps" \
                  -name "*$p*.png" | head -n1 | xargs basename)
        for s in 10 16 24 32 48 255 256; do
            src="$hi/${s}x${s}/apps"
            dst="$HOME/.local/share/icons/hicolor/${s}x${s}/apps"
            if [ -f "$src/$ic" ]; then
                mkdir -p "$dst"
                if [ -n "$r" ]; then
                    rm "$dst/$p-$year.png"
                else
                    cp "$src/$ic" "$dst/$p-$year.png"
                fi
            fi
        done
    done
}

desktop_word() {
    echo "[Desktop Entry]
Name=Office Word $year
Exec=$SELF $year word %F
Icon=WINWORD-$year
Terminal=false
Type=Application
Categories=Office;WordProcessor;X-Red-Hat-Base;X-MandrivaLinux-Office-Wordprocessors;
MimeType=application/vnd.oasis.opendocument.text;application/vnd.oasis.opendocument.text-template;application/vnd.oasis.opendocument.text-web;application/vnd.oasis.opendocument.text-master;application/vnd.oasis.opendocument.text-master-template;application/vnd.sun.xml.writer;application/vnd.sun.xml.writer.template;application/vnd.sun.xml.writer.global;application/msword;application/vnd.ms-word;application/x-doc;application/x-hwp;application/rtf;text/rtf;application/vnd.wordperfect;application/wordperfect;application/vnd.lotus-wordpro;application/vnd.openxmlformats-officedocument.wordprocessingml.document;application/vnd.ms-word.document.macroEnabled.12;application/vnd.openxmlformats-officedocument.wordprocessingml.template;application/vnd.ms-word.template.macroEnabled.12;application/vnd.ms-works;application/vnd.stardivision.writer-global;application/x-extension-txt;application/x-t602;text/plain;application/vnd.oasis.opendocument.text-flat-xml;application/x-fictionbook+xml;application/macwriteii;application/x-aportisdoc;application/prs.plucker;application/vnd.palm;application/clarisworks;application/x-sony-bbeb;application/x-abiword;application/x-iwork-pages-sffpages;application/x-mswrite;application/x-starwriter;"
}

desktop_powerpoint() {
    echo "[Desktop Entry]
Name=Office PowerPoint $year
Exec=$SELF $year powerpoint %F
Icon=POWERPNT-$year
Terminal=false
Type=Application
Categories=Office;Presentation;X-Red-Hat-Base;X-MandrivaLinux-Office-Presentations;
MimeType=application/vnd.oasis.opendocument.presentation;application/vnd.oasis.opendocument.presentation-template;application/vnd.sun.xml.impress;application/vnd.sun.xml.impress.template;application/mspowerpoint;application/vnd.ms-powerpoint;application/vnd.openxmlformats-officedocument.presentationml.presentation;application/vnd.ms-powerpoint.presentation.macroEnabled.12;application/vnd.openxmlformats-officedocument.presentationml.template;application/vnd.ms-powerpoint.template.macroEnabled.12;application/vnd.openxmlformats-officedocument.presentationml.slide;application/vnd.openxmlformats-officedocument.presentationml.slideshow;application/vnd.ms-powerpoint.slideshow.macroEnabled.12;application/vnd.oasis.opendocument.presentation-flat-xml;application/x-iwork-keynote-sffkey;"
}

desktop_excel() {
    echo "[Desktop Entry]
Name=Office Excel $year
Exec=$SELF $year excel %F
Icon=EXCEL-$year
Terminal=false
Type=Application
Categories=Office;Spreadsheet;X-Red-Hat-Base;X-MandrivaLinux-Office-Spreadsheets;
MimeType=application/vnd.oasis.opendocument.spreadsheet;application/vnd.oasis.opendocument.spreadsheet-template;application/vnd.sun.xml.calc;application/vnd.sun.xml.calc.template;application/msexcel;application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;application/vnd.ms-excel.sheet.macroEnabled.12;application/vnd.openxmlformats-officedocument.spreadsheetml.template;application/vnd.ms-excel.template.macroEnabled.12;application/vnd.ms-excel.sheet.binary.macroEnabled.12;text/csv;application/x-dbf;text/spreadsheet;application/csv;application/excel;application/tab-separated-values;application/vnd.lotus-1-2-3;application/vnd.oasis.opendocument.chart;application/vnd.oasis.opendocument.chart-template;application/x-dbase;application/x-dos_ms_excel;application/x-excel;application/x-msexcel;application/x-ms-excel;application/x-quattropro;application/x-123;text/comma-separated-values;text/tab-separated-values;text/x-comma-separated-values;text/x-csv;application/vnd.oasis.opendocument.spreadsheet-flat-xml;application/vnd.ms-works;application/clarisworks;application/x-iwork-numbers-sffnumbers;application/x-starcalc;"
}

info() {
    printf '\033[1;34mINFO:\033[0m '
    echo "$@"
}

err() {
    {
        printf '\033[1m\033[31mERROR:\033[0m '
        echo "$@"
    } >&2
    return 1
}

year2version() {
    case "$1" in
        2007) echo 12 ;;
        2010) echo 14 ;;
        2013) echo 15 ;;
        2016) echo 16 ;;
        *)
            err "Unknown office version $1" ;;
    esac
}

jail() {
    firejail --private-tmp --blacklist=/mnt --private="$jail_path" "$@"
}

install() {
    installer_path="$1"

    [ -d "$jail_path" ] && {
        err "Jail directory already exist"
        return 1
    }

    [ -d "$installer_path" ] || {
        err "Installer directory not found at '$installer_path'"
        return 1
    }

    info 'Installing...'

    trap : INT TERM
    if rm -rf "$jail_path" &&
            mkdir -p "$jail_path" &&
            info 'Setting up Wine and installing' &&
            info 'Copying Office...' &&
            cp -r "$installer_path/" "$jail_path/installer" &&
            jail sh -c "
              export WINEARCH=$win_arch
              winetricks $win_version $tricks
              wine '$HOME/installer/setup.exe' 2>/dev/null
              " &&
            info 'Cleaning...' &&
            rm -rf "$jail_path/installer" &&
            desktops; then
        info 'DONE!'
    else
        info 'Canceling...'
        uninstall
    fi
}

uninstall() {
    rm -rf "$jail_path"
    rm_desktops
}

desktops() {
    mkdir -p "$DESKTOPS"
    icons
    desktop_word       > "$DESKTOPS/jail-office-$year-word.desktop"
    desktop_powerpoint > "$DESKTOPS/jail-office-$year-powerpoint.desktop"
    desktop_excel      > "$DESKTOPS/jail-office-$year-excel.desktop"
    info 'Installed. Run update-desktop-database as root if needed'
}

rm_desktops() {
    icons --rm
    rm -f "$DESKTOPS/jail-office-$year-word.desktop"
    rm -f "$DESKTOPS/jail-office-$year-powerpoint.desktop"
    rm -f "$DESKTOPS/jail-office-$year-excel.desktop"
    info 'Deleted. Run update-desktop-database as root if needed'
}

run() {
    year="$1"
    cmd="$2"
    f=$(realpath -s "$3")

    cd || return 1

    case "$year" in
        2007)
            win_arch=win32
            win_version=winxp
            tricks='riched30 corefonts' ;;

        2010)
            win_arch=win32
            win_version=winxp
            tricks='riched30 corefonts' ;;

        *)
            err "Unknown office version $year"
    esac

    jail_path="$JAIL_PREFIX$year"

    case "$cmd" in
        install)     install "$f"; return ;;
        uninstall)   uninstall;    return ;;
        desktops)    desktops;     return ;;
        rm-desktops) rm_desktops;  return ;;

        w|doc|word)       app="WINWORD"  ;;
        e|xls|excel)      app="EXCEL"    ;;
        p|ppt|powerpoint) app="POWERPNT" ;;
        *)
            err "Unknown application '$1'"
            return 1
    esac

    v=$(year2version "$year")
    p="$HOME/.wine/drive_c/Program Files/Microsoft Office/Office$v/$app.EXE"

    if [ ! -d "$jail_path" ]; then
        err "Office $year is not installed"
        return 1
    fi

    if [ -f "$f" ]; then
        rf=$(realpath "$f")
        sum=$(echo "$rf" | cksum | cut -d ' ' -f1)
        tmp_name="$sum $(basename "$rf")"
        mkdir -p "$jail_path/tmpdocs/"
        tmp_path="$jail_path/tmpdocs/$tmp_name"
        tmp_jail_path="$HOME/tmpdocs/$tmp_name"
        cp "$rf" "$tmp_path"

        jail --net=none wine "$p" "$tmp_jail_path"

        old_mod=$(stat -c %a "$f")
        old_size=$(stat -c %s "$f")
        new_size=$(stat -c %s "$tmp_path")
        if [ "$old_size" != "$new_size" ]; then
            now=$(date +%Y%m%d-%H:%M:%S)
            bak_path="$f.$now.bak"
            cp "$f" "$bak_path" &&
                mv "$tmp_path" "$rf" &&
                chmod "$old_mod" "$rf"
        fi
    else
        jail --net=none wine "$p"
    fi
}

main() {
    if [ $# = 0 ]; then
        res=$({
                 for y in 2010 2007; do
                     for a in word powerpoint excel; do
                         echo "$y $a"
                     done
                 done
             } | menus-face)
        [ -n "$res" ] && run $res
    else
        run "$@"
    fi
}

main "$@"
